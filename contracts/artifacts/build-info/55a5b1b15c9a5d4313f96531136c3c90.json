{
	"id": "55a5b1b15c9a5d4313f96531136c3c90",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/eventtrigger.sol": {
				"content": "pragma solidity ^0.6.0;\n\ncontract ItemManager {\n    \n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/eventtrigger.sol": {
				"ItemManager": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/eventtrigger.sol\":25:54  contract ItemManager {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/eventtrigger.sol\":25:54  contract ItemManager {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207ff56c335893affcaf414ca67f32e003bfd766faf89f02f3e10034cc7d7434fa64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212207ff56c335893affcaf414ca67f32e003bfd766faf89f02f3e10034cc7d7434fa64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0xF56C335893AFFCAF414CA67F32E003BFD766FAF89F02F3E10034CC7D7434FA64 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "25:29:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212207ff56c335893affcaf414ca67f32e003bfd766faf89f02f3e10034cc7d7434fa64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0xF56C335893AFFCAF414CA67F32E003BFD766FAF89F02F3E10034CC7D7434FA64 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "25:29:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 54,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 25,
									"end": 54,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25,
									"end": 54,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25,
									"end": 54,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 25,
									"end": 54,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 54,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 25,
									"end": 54,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25,
									"end": 54,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 25,
									"end": 54,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 54,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 54,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 25,
									"end": 54,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25,
									"end": 54,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25,
									"end": 54,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25,
									"end": 54,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 54,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 54,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 54,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 54,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25,
									"end": 54,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 54,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207ff56c335893affcaf414ca67f32e003bfd766faf89f02f3e10034cc7d7434fa64736f6c634300060c0033",
									".code": [
										{
											"begin": 25,
											"end": 54,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 25,
											"end": 54,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25,
											"end": 54,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25,
											"end": 54,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25,
											"end": 54,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25,
											"end": 54,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/eventtrigger.sol\":\"ItemManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/eventtrigger.sol\":{\"keccak256\":\"0x65d004a70bde1f797cdfb3b181ccdd5f9f9c350909478b681b4771d28bd022de\",\"urls\":[\"bzz-raw://f5dba29ff751eaea0e3acb7829f963c24d049a2884210ccb11f07a6c0e919af5\",\"dweb:/ipfs/QmajNSEMk1mbH1LvMPH7vf6dYYVqSbpDj5V4zDy1V77QFF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "contracts/eventtrigger.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/eventtrigger.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/eventtrigger.sol": {
				"ast": {
					"absolutePath": "contracts/eventtrigger.sol",
					"exportedSymbols": {
						"ItemManager": [
							2
						]
					},
					"id": 3,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "ItemManager",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "25:29:0"
						}
					],
					"src": "0:54:0"
				},
				"id": 0
			}
		}
	}
}